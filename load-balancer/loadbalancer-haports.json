{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualNetworkName": {
            "type": "string",
            "defaultValue" : "MyTestVnet",
            "metadata": {
                "description": "This is the name of the Virtual Network"
            }

        },
        "networkInterfaceName": {
            "type": "string",
            "defaultValue" : "MyTestbenic1",
            "metadata": {
                "description": "This is the prefix name of the Network interfaces"
            }

        },
        "loadBalancerName": {
            "type": "string",
            "defaultValue" : "MyTestILB",
            "metadata": {
                "description": "This is the name of the load balancer"
            }

        },
        "adminUsername": {
            "type": "string",
			"metadata": {
                "description": "Admin username",
            }
        },
        "adminPassword": {
            "type": "securestring",
			"metadata": {
                "description": "Admin password"
            }
        },
        "dnsNameForPublicIP": {
            "type": "string",
			"defaultValue": "mytestvip",
            "metadata": {
                "description": "Unique DNS Name for the Public IP used to access the Virtual Machine."
            }
        },
        "imagePublisher": {
            "type": "string",
			"defaultValue": "MicrosoftWindowsServer",
            "metadata": {
                "description": "Image Publisher"
            }
        },
        "vmNamePrefix": {
            "type": "string",
            "defaultValue": "TestAppVM",
            "metadata": {
                "description": "Prefix to use for VM names"
            }
        },
        "imageOffer": {
            "type": "string",
            "defaultValue": "WindowsServer",
            "metadata": {
                "description": "Image Offer"
            }
        },
        "imageSKU": {
            "type": "string",
            "defaultValue": "2012-R2-Datacenter",
            "metadata": {
                "description": "Image SKU"
            }
        },
        "vmStorageAccountContainerName": {
            "type": "string",
            "defaultValue": "vhds",
            "metadata": {
                "description": "This is the storage account container name"
            }

        },
        "vmName": {
            "type": "string",
            "defaultValue": "vm",
            "metadata": {
                "description": "This is the prefix name for the virtual machines"
            }

        },
        "storageAccountName": {
            "type": "string",
			"defaultValue": "myteststgacc"
        },
        "storageAccountDomain": {
            "type": "string",
			"defaultValue": "core.windows.net",
            "metadata": {
                "description": "The domain of the storage account to be created."
            }
        },
        "vmSize": {
            "type": "string",
            "defaultValue": "Standard_A1",
            "metadata": {
                "description": "This is the allowed list of VM sizes"
            }

        },
        "storageLocation": {
            "type": "string",
			"defaultValue": "westeurope",
            "metadata": {
                "description": "Location of the Storage Account."
            }
        },
        "location": {
            "type": "string",
			"defaultValue": "westeurope",
            "metadata": {
                "description": "Location to deploy all the resources in."
            }
        },
        "addressSpacePrefix": {
            "type": "string",
			"defaultValue": "10.0.0.0/16",
            "metadata": {
                "description": "Vnet Private Address space."
            }
        },
        "dmzSubnetPrefix": {
            "type": "string",
			"defaultValue": "10.0.0.0/24",
            "metadata": {
                "description": "DMZ Subnet Address prefix."
            }
        },
		"nvaSubnetPrefix": {
            "type": "string",
			"defaultValue": "10.0.1.0/24",
            "metadata": {
                "description": "NVA Subnet Address prefix."
            }
        },
        "ilbVIP": {
            "type": "string",
			"defaultValue": "10.0.1.100",
            "metadata": {
                "description": "Private IP Address of the ILB VIP."
            }
        }
    },
    "variables": {
        "networkSecurityGroupName": "mytestNSG",
        "storageAccountType": "Standard_LRS",
        "nvaSubnetName": "nvaSubnet",
		"dmzSubnetName": "dmzSubnet",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',parameters('virtualNetworkName'))]",
        "dmzsubnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('dmzSubnetName'))]",
        "nvasubnetRef": "[concat(variables('vnetID'),'/subnets/',variables ('nvaSubnetName'))]",
        "numberOfInstances": 2,
        "lbID": "[resourceId('Microsoft.Network/loadBalancers',parameters('loadBalancerName'))]",
        "FrontendSubnetRouteTable": "[concat('FrontendSubnetRouteTable-',resourceGroup().location)]",
		"publicIPAddressName": "myTestPublicIP",
        "publicIPAddressType": "Static",
        "vmName": "MyTestDMZVM",
        "nicName": "publicNic"
    },
    "resources": [ 
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
	{
        "apiVersion": "2016-03-30",
        "type": "Microsoft.Network/networkSecurityGroups",
        "name": "[variables('networkSecurityGroupName')]",
        "location": "[parameters('location')]",
        "properties": {
            "securityRules": [
                {
                    "name": "unblock_all_tcp_rule",
                    "properties": {
                        "description": "unblock_all_tcp_rule",
                        "protocol": "Tcp",
                        "sourcePortRange": "0-65535",
                        "destinationPortRange": "0-65535",
                        "sourceAddressPrefix": "0.0.0.0/0",
                        "destinationAddressPrefix": "0.0.0.0/0",
                        "access": "Allow",
                        "priority": 123,
                        "direction": "Inbound"
                    }
                },
                {
                    "name": "unblock_all_tcp_outrule",
                    "properties": {
                        "description": "unblock_all_tcp_outrule",
                        "protocol": "Tcp",
                        "sourcePortRange": "0-65535",
                        "destinationPortRange": "0-65535",
                        "sourceAddressPrefix": "0.0.0.0/0",
                        "destinationAddressPrefix": "0.0.0.0/0",
                        "access": "Allow",
                        "priority": 123,
                        "direction": "Outbound"
                    }
                },
                {
                    "name": "unblock_all_udp_ports",
                    "properties": {
                        "description": "Unblock_all_udp_ports",
                        "protocol": "Udp",
                        "sourcePortRange": "0-65535",
                        "destinationPortRange": "0-65535",
                        "sourceAddressPrefix": "0.0.0.0/0",
                        "destinationAddressPrefix": "0.0.0.0/0",
                        "access": "Allow",
                        "priority": 125,
                        "direction": "Inbound"
                    }
                }
            ]
        }
    },   
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/routeTables",
      "name": "[variables('FrontendSubnetRouteTable')]",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "Route Table - Front subnet"
      },
      "properties": {
        "routes": [
          {
            "name": "RouteToNVASubnetFromFrontend",
            "properties": {
              "addressPrefix": "[parameters('nvaSubnetPrefix')]",
              "nextHopType": "VirtualAppliance",
              "nextHopIpAddress": "[parameters('ilbVIP')]"
            }
          }
        ]
      }
    },
    {
        "apiVersion": "2017-08-01",
        "type": "Microsoft.Network/publicIPAddresses",
        "name": "[variables('publicIPAddressName')]",
        "location": "[parameters('location')]",
        "sku":
        {
            "name": "Standard"
        },
        "properties": {
            "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
            "dnsSettings": {
                "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
            }
        }
    },
    {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/virtualNetworks",
        "name": "[parameters('virtualNetworkName')]",
        "location": "[parameters('location')]",
        "dependsOn": [ "[concat('Microsoft.Network/networkSecurityGroups/', variables('networkSecurityGroupName'))]" ],
        "properties": {
            "addressSpace": {
                "addressPrefixes": [
                    "[parameters('addressSpacePrefix')]",
                ]
            },
            "subnets": [
			{
                "name": "[variables('nvaSubnetName')]",
                "properties": {
                    "addressPrefix": "[parameters('nvaSubnetPrefix')]",
                    "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                    }
                }
            },
			{
                "name": "[variables('dmzSubnetName')]",
                "properties": {
                    "addressPrefix": "[parameters('dmzSubnetPrefix')]",
                    "networkSecurityGroup": {
                        "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
                    }
                }
            }]
        }
    },

    {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[concat(parameters('networkInterfaceName'), copyindex())]",
        "location": "[parameters('location')]",
        "copy": {
            "name": "nicLoop",
            "count": "[variables('numberOfInstances')]"
        },
        "dependsOn": [
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
            "[concat('Microsoft.Network/loadBalancers/', parameters('loadBalancerName'))]"
        ],
        "properties": {
            "ipConfigurations": [{
                "name": "ipconfig1",
                "properties": {
                    "privateIPAllocationMethod": "Dynamic",
                    "subnet": {
                        "id": "[variables('nvaSubnetRef')]"
                    },
                    "loadBalancerBackendAddressPools": [{
                        "id": "[concat(variables('lbID'), '/backendAddressPools/BackendPool1')]"
                    }
                    ]}
            }]

        }
    },
    {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Network/networkInterfaces",
        "name": "[variables('nicName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
            "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]"
        ],
        "properties": {
            "ipConfigurations": [
                {
                    "name": "ipconfig1",
                    "properties": {
                        "privateIPAllocationMethod": "Dynamic",
                        "publicIPAddress": {
                            "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                        },
                        "subnet": {
                            "id": "[variables('dmzSubnetRef')]"
                        }
                    }
                }
            ]
        }
    },
    {
        "apiVersion": "2017-08-01",
        "type": "Microsoft.Network/loadBalancers",
        "name": "[parameters('loadBalancerName')]",
        "location": "[parameters('location')]",
        "sku":
        {
            "name": "Standard"
        },
        "dependsOn": ["[variables('vnetID')]"],
        "properties": {
            "frontendIpConfigurations": [{

                "properties": {
                    "subnet": {
                        "Id": "[variables('nvaSubnetRef')]"
                    },
                    "privateIPAddress": "[parameters('ilbVIP')]",
                    "privateIPAllocationMethod": "Static"
                },
                "name": "LoadBalancerFrontend"
            }],
            "backendAddressPools": [{
                "name": "BackendPool1"
            }],
            "loadBalancingRules": [{
                "properties": {
                    "frontendIPConfiguration": {
                        "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/frontendIpConfigurations/LoadBalancerFrontend')]"
                    },
                    "backendAddressPool": {
                        "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/backendAddressPools/BackendPool1')]"
                    },
                    "probe": {
                        "Id": "[concat(resourceId('Microsoft.Network/loadBalancers', parameters('loadBalancerName')), '/probes/lbprobe')]"
                    },
                    "protocol": "All",
                    "frontendPort": 0,
                    "backendPort": 0,
                    "idleTimeoutInMinutes": 15

                },
                "Name": "lbrule"
            }],
            "probes": [{
                "properties": {
                    "protocol": "Tcp",
                    "port": 80,
                    "intervalInSeconds": 15,
                    "numberOfProbes": 2
                },
                "name": "lbprobe"
            }]
        }
    }, {
    "apiVersion": "2015-05-01-preview",
    "type": "Microsoft.Compute/virtualMachines",
    "name": "[concat(parameters('vmNamePrefix'), copyindex())]",
    "copy": {
        "name": "virtualMachineLoop",
        "count": "[variables('numberOfInstances')]"
    },
    "location": "[parameters('location')]",
    "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName'), copyindex())]"
    ],
    "properties": {
        "hardwareProfile": {
            "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
            "computername": "[concat(parameters('vmNamePrefix'), copyIndex())]",
            "adminUsername": "[parameters('adminUsername')]",
            "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
            "imageReference": {
                "publisher": "[parameters('imagePublisher')]",
                "offer": "[parameters('imageOffer')]",
                "sku": "[parameters('imageSKU')]",
                "version": "latest"
            },
            "osDisk": {
                "name": "osdisk",
                "vhd": {
                    "uri": "[concat('http://',parameters('storageAccountName'),'.blob.',parameters('storageAccountDomain'),'/vhds/','osdisk', copyindex(), '.vhd')]"
                },
                "caching": "ReadWrite",
                "createOption": "FromImage"
            }
        },
        "networkProfile": {
            "networkInterfaces": [{
                "id": "[resourceId('Microsoft.Network/networkInterfaces',concat(parameters('networkInterfaceName'),copyindex()))]"
            }]
        }
    }
    },
    {
        "apiVersion": "2015-05-01-preview",
        "type": "Microsoft.Compute/virtualMachines",
        "name": "[variables('vmName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
            "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]",
            "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
        ],
        "properties": {
            "hardwareProfile": {
                "vmSize": "[parameters('vmSize')]"
            },
            "osProfile": {
                "computername": "[variables('vmName')]",
                "adminUsername": "[parameters('adminUsername')]",
                "adminPassword": "[parameters('adminPassword')]"
            },
            "storageProfile": {
                "imageReference": {
                    "publisher": "[parameters('imagePublisher')]",
                    "offer": "[parameters('imageOffer')]",
                    "sku" : "[parameters('imageSKU')]",
                    "version":"latest"
                },
                "osDisk" : {
                    "name": "osdisk",
                    "vhd": {
                        "uri": "[concat('http://',parameters('storageAccountName'),'.blob.',parameters('storageAccountDomain'),'/vhds/','osdiskmyvm.vhd')]"
                    },
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                }
            },
            "networkProfile": {
                "networkInterfaces": [
                    {
                        "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                    }
                ]
            }
        }
    }
    ]
}
